{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\project_code\\\\frontend\\\\src\\\\pages\\\\PredictionPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PredictionPage() {\n  _s();\n  const [files, setFiles] = useState({\n    wave: null,\n    distance: null,\n    salinity: null,\n    bathymetry: null,\n    chlorophyll: null\n  });\n  const [month, setMonth] = useState(\"January\");\n  const [status, setStatus] = useState(\"\");\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n  const handleFileChange = (e, key) => {\n    const file = e.target.files[0];\n    if (file && !file.name.endsWith(\".tif\") && !file.name.endsWith(\".tiff\")) {\n      alert(\"Only TIFF files are allowed.\");\n      return;\n    }\n    setFiles(prev => ({\n      ...prev,\n      [key]: file\n    }));\n  };\n  const handleSubmit = async () => {\n    const allSelected = Object.values(files).every(f => f !== null);\n    if (!allSelected) {\n      alert(\"Please upload all 5 required TIFF files.\");\n      return;\n    }\n    const formData = new FormData();\n    Object.entries(files).forEach(([key, file]) => {\n      formData.append(\"files[]\", file);\n    });\n    formData.append(\"month\", month);\n    setStatus(\"Uploading and processing...\");\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setStatus(\"Error: \" + errorData.error);\n        return;\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      setDownloadUrl(url);\n      setStatus(\"Success! Download ready.\");\n    } catch (error) {\n      setStatus(\"Server error: \" + error.message);\n    }\n  };\n  const handleDownload = () => {\n    const a = document.createElement(\"a\");\n    a.href = downloadUrl;\n    a.download = \"predicted_suitability.tif\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction-page intro-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Wave Energy Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Wave Energy Prediction Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Month:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: month,\n            onChange: e => setMonth(e.target.value),\n            children: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: m,\n              children: m\n            }, m, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), [\"wave\", \"distance\", \"salinity\", \"bathymetry\", \"chlorophyll\"].map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: `${index + 1}. ${key.charAt(0).toUpperCase() + key.slice(1)}:`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".tif,.tiff\",\n              onChange: e => handleFileChange(e, key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), files[key] && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-check\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: \"btn-primary\",\n            children: \"Process Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-message ${status.includes(\"Success\") ? \"status-success\" : \"status-error\"}`,\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), downloadUrl && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDownload,\n            className: \"btn-download\",\n            children: \"Download Predicted TIFF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(PredictionPage, \"VOIFTSPKa7WZacLd6sC3dr1D/Qc=\");\n_c = PredictionPage;\nexport default PredictionPage;\nvar _c;\n$RefreshReg$(_c, \"PredictionPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","jsxDEV","_jsxDEV","PredictionPage","files","setFiles","wave","distance","salinity","bathymetry","chlorophyll","month","setMonth","status","setStatus","downloadUrl","setDownloadUrl","handleFileChange","e","key","file","target","name","endsWith","alert","prev","handleSubmit","allSelected","Object","values","every","f","formData","FormData","entries","forEach","append","response","fetch","method","body","ok","errorData","json","error","blob","url","window","URL","createObjectURL","message","handleDownload","a","document","createElement","href","download","appendChild","click","removeChild","className","children","fileName","lineNumber","columnNumber","value","onChange","map","m","index","charAt","toUpperCase","slice","type","accept","onClick","includes","_c","$RefreshReg$"],"sources":["D:/project_code/frontend/src/pages/PredictionPage.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\n\nfunction PredictionPage() {\n  const [files, setFiles] = useState({\n    wave: null,\n    distance: null,\n    salinity: null,\n    bathymetry: null,\n    chlorophyll: null,\n  });\n\n  const [month, setMonth] = useState(\"January\");\n  const [status, setStatus] = useState(\"\");\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n\n  const handleFileChange = (e, key) => {\n    const file = e.target.files[0];\n    if (file && !file.name.endsWith(\".tif\") && !file.name.endsWith(\".tiff\")) {\n      alert(\"Only TIFF files are allowed.\");\n      return;\n    }\n\n    setFiles((prev) => ({\n      ...prev,\n      [key]: file,\n    }));\n  };\n\n  const handleSubmit = async () => {\n    const allSelected = Object.values(files).every((f) => f !== null);\n    if (!allSelected) {\n      alert(\"Please upload all 5 required TIFF files.\");\n      return;\n    }\n\n    const formData = new FormData();\n    Object.entries(files).forEach(([key, file]) => {\n      formData.append(\"files[]\", file);\n    });\n    formData.append(\"month\", month);\n\n    setStatus(\"Uploading and processing...\");\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        setStatus(\"Error: \" + errorData.error);\n        return;\n      }\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      setDownloadUrl(url);\n      setStatus(\"Success! Download ready.\");\n    } catch (error) {\n      setStatus(\"Server error: \" + error.message);\n    }\n  };\n\n  const handleDownload = () => {\n    const a = document.createElement(\"a\");\n    a.href = downloadUrl;\n    a.download = \"predicted_suitability.tif\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  return (\n    <div className=\"prediction-page intro-page\">\n      <div className=\"container\">\n        <h1 className=\"page-title\">Wave Energy Prediction</h1>\n\n        <div className=\"card\">\n          <h2>Wave Energy Prediction Input</h2>\n\n          <div className=\"month-dropdown\">\n            <label>Select Month:</label>\n            <select value={month} onChange={(e) => setMonth(e.target.value)}>\n              {[\n                \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n              ].map((m) => (\n                <option key={m} value={m}>\n                  {m}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {[\"wave\", \"distance\", \"salinity\", \"bathymetry\", \"chlorophyll\"].map((key, index) => (\n            <div key={index} className=\"file-input-group\">\n              <label>{`${index + 1}. ${key.charAt(0).toUpperCase() + key.slice(1)}:`}</label>\n              <div className=\"file-input-container\">\n                <input\n                  type=\"file\"\n                  accept=\".tif,.tiff\"\n                  onChange={(e) => handleFileChange(e, key)}\n                />\n                {files[key] && <span className=\"file-check\">✓</span>}\n              </div>\n            </div>\n          ))}\n\n          <div>\n            <button onClick={handleSubmit} className=\"btn-primary\">\n              Process Files\n            </button>\n\n            {status && (\n              <div className={`status-message ${status.includes(\"Success\") ? \"status-success\" : \"status-error\"}`}>\n                {status}\n              </div>\n            )}\n\n            {downloadUrl && (\n              <button onClick={handleDownload} className=\"btn-download\">\n                Download Predicted TIFF\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PredictionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}